import { useState } from 'react';
import <%= className %>Form from './<%= className %>Form';

export default {
  title: 'Generated/<%= className %>/<%= className %>Form',
  component: <%= className %>Form,
  argTypes: {
    defaultValues: { control: 'object' },
    options: { control: 'object' },
  },
};

// Utility function to parse default values for component props
const parseDefaultValues = (values) => {
  const parsedValues = { ...values };
  for (const key in parsedValues) {
    if (Object.prototype.hasOwnProperty.call(parsedValues, key)) {
      const value = parsedValues[key];
      if (typeof value === 'string' && !isNaN(Date.parse(value))) {
        parsedValues[key] = new Date(value);
      }
    }
  }
  return parsedValues;
};

const Template = (args) => {
  // Use Date instances for defaultValues when passing them to the component
  const initialValues = parseDefaultValues(args.defaultValues);
  const [data, setData] = useState(initialValues);

  const handleChange = (newData) => {
    setData(newData);
  };

  return <<%= className %>Form {...args} defaultValues={data} onChange={handleChange} />;
};

export const Default = Template.bind({});
Default.args = {
  defaultValues: <%- JSON.stringify(defaultValues) %>,
  options: <%- JSON.stringify(options) %>,
};
